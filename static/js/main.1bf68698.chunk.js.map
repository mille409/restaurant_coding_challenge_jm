{"version":3,"sources":["DataDisplay/TableDisplay/RestaurantInstance.js","FiltrationFunctions/FiltrationFunctions.js","DataDisplay/TableDisplay/Pagination.js","DataDisplay/TableDisplay/ModalDisplay.js","DataDisplay/TableDisplay/TableDisplay.js","DataDisplay/FiltrationDisplay/SearchBar.js","DataDisplay/FiltrationDisplay/FilterByState.js","DataDisplay/FiltrationDisplay/FilterByGenre.js","DataDisplay/FiltrationDisplay/FilterActiveToggle.js","DataDisplay/FiltrationDisplay/FiltrationDisplay.js","DataDisplay/DataDisplay.js","Constants/Constants.js","SortingFunctions/SortingFunctions.js","App.js","reportWebVitals.js","index.js"],"names":["RestaurantInstance","state","showModal","activateModal","bind","this","props","restaurant","onClick","name","city","telephone","genre","id","React","Component","filterRestaurantsByState","unfilteredArray","filteredArray","push","filterRestaurantsByGenre","includes","filterRestaurantsBySearchQuery","searchQuery","Pagination","currentPage","handleClick","pages","map","page","index","activeClass","href","className","informParent","setState","ModalDisplay","modalActivated","modalRestaurant","address1","zip","attire","website","TableDisplay","processPaginationSelection","filteredArrayLength","pageArray","pageCount","i","restaurantArray","upperBound","paginatedArray","console","log","displayRows","restaurantData","filterActive","filterByState","filterByGenre","FiltrationFunctions","filterBySearchQuery","element","length","returnPaginatedDisplayArray","createPageArray","SearchBar","handleChange","initiateSearch","event","target","value","type","placeholder","onChange","preventDefault","FilterByState","FilterByGenre","FilterActiveToggle","toggleActive","checked","FiltrationDisplay","stateValue","informParentState","informParentGenre","informParentSearchQuery","informParentToggle","toggleState","processToggleState","DataDisplay","determineIfFilterIsActive","getRestaurantData","filterState","headerConfig","headers","Authorization","axios","get","then","response","unorderedArray","status","data","sort","a","b","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1bf68698.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport default class RestaurantInstance extends React.Component\r\n{\r\n    //Handles an individual table row in the table display. This component is given the entirety of the restaurant information. \r\n    //It displays a portion of the information and gives the rest to the modal so that the user can see the rest at will without being \r\n    //burdended by more than is required. \r\n\r\n    constructor()\r\n    {\r\n        super();\r\n        this.state = {showModal: false};\r\n        this.activateModal = this.activateModal.bind(this);\r\n    }\r\n\r\n    render()\r\n    {\r\n        if(this.props.restaurant)\r\n        {\r\n            return <tr key={this.props.restaurant.id} onClick = {this.activateModal}>\r\n                        <td>{this.props.restaurant.name}</td>\r\n                        <td>{this.props.restaurant.city}</td>\r\n                        <td>{this.props.restaurant.state}</td>\r\n                        <td>{this.props.restaurant.telephone}</td>\r\n                        <td>{this.props.restaurant.genre}</td>                        \r\n                   </tr>\r\n        }\r\n        else\r\n        {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    activateModal()\r\n    {\r\n        this.props.activateModal(this.props.restaurant);\r\n    }\r\n}","export function filterRestaurantsByState(unfilteredArray,state)\r\n{\r\n    let filteredArray = [];\r\n    for(let restaurant of unfilteredArray)\r\n    {\r\n        if(restaurant.state === state)\r\n        {\r\n            filteredArray.push(restaurant);\r\n        }\r\n    }\r\n    return filteredArray;\r\n}\r\n\r\nexport function filterRestaurantsByGenre(unfilteredArray,genre)\r\n{\r\n    let filteredArray = [];\r\n    for(let restaurant of unfilteredArray)\r\n    {\r\n        if(restaurant.genre.includes(genre))\r\n        {\r\n            filteredArray.push(restaurant);\r\n        }\r\n    }\r\n    return filteredArray;\r\n}\r\n\r\nexport function filterRestaurantsBySearchQuery(unfilteredArray,searchQuery)\r\n{\r\n    let filteredArray = [];\r\n    for(let restaurant of unfilteredArray)\r\n    {\r\n        if(restaurant.genre.includes(searchQuery) || restaurant.name.includes(searchQuery) || restaurant.city.includes(searchQuery))\r\n        {\r\n            filteredArray.push(restaurant);\r\n        }\r\n    }\r\n    return filteredArray;\r\n}","import React from 'react';\r\nimport './Pagination.css';\r\n\r\nexport default class Pagination extends React.Component\r\n{\r\n\r\n    constructor()\r\n    {\r\n        super();\r\n        this.state = {currentPage: 1};\r\n        this.handleClick = this.handleClick.bind(this);\r\n    }\r\n\r\n    render()\r\n    {\r\n        return (\r\n                <ul>\r\n                  { this.props.pages.map((page, index) => {\r\n                    var activeClass = this.state.currentPage === page ? 'active' : '';\r\n                    return (\r\n                      <li key={index}>\r\n                        <a href=\"#\" className={`${activeClass}`} onClick={ () => this.handleClick(page)}>{ page }</a>\r\n                      </li>\r\n                    );\r\n                  }) }\r\n                </ul>\r\n          );\r\n    }\r\n\r\n    handleClick(page)\r\n    {\r\n        this.props.informParent(page);\r\n        this.setState({currentPage: page});\r\n    }\r\n}","import React from 'react';\r\n\r\nexport default class ModalDisplay extends React.Component\r\n{\r\n    //The styling to make this data display a true modal has not been applied yet so it's more of a dynamic wall of data.\r\n    render()\r\n    {\r\n        if(this.props.modalActivated && this.props.modalRestaurant)\r\n        {\r\n            return <div>{this.props.modalRestaurant.name}  Data\r\n                   <p>Address: {this.props.modalRestaurant.address1}   ,Zip Code: {this.props.modalRestaurant.zip}</p>\r\n                   <p>Attire: {this.props.modalRestaurant.attire}</p>\r\n                   <p>Telephone: {this.props.modalRestaurant.telephone}</p>\r\n                   <p>Website: {this.props.modalRestaurant.website}</p>\r\n            </div>\r\n        }\r\n        else\r\n        {\r\n            return null;\r\n        }\r\n    }\r\n}","import React from 'react';\r\nimport RestaurantInstance from './RestaurantInstance';\r\nimport * as FiltrationFunctions from '../../FiltrationFunctions/FiltrationFunctions.js';\r\nimport Pagination from './Pagination.js';\r\nimport './TableDisplay.css';\r\nimport ModalDisplay from './ModalDisplay';\r\n\r\nexport default class TableDisplay extends React.Component\r\n{\r\n\r\n    constructor()\r\n    {\r\n        super();\r\n        this.state = \r\n        {\r\n            page: 1, \r\n            modalRestaurant: null,\r\n            modalActivated: false\r\n        };\r\n        this.processPaginationSelection = this.processPaginationSelection.bind(this);\r\n        this.activateModal = this.activateModal.bind(this);\r\n    }\r\n\r\n    createPageArray(filteredArrayLength)\r\n    {\r\n        //Returns the number of pages to be created by the pagination component given the length of the \"filtered\" array (n.b. if no filtration or search parameters are entered the array is considered to be filtered vacously)\r\n        let c = filteredArrayLength; //Purely for ease of readibility for the following calculation.\r\n        let pageArray = [];\r\n        if(c<10) //Otherwise we would geta page count of 0 with 7 entries as an example. \r\n        {\r\n            return [1];\r\n        } \r\n        let pageCount = ((c-c%10)/10)+1;\r\n        for(let i=1;i<=pageCount;i++)\r\n        {\r\n            pageArray.push(i);\r\n        }\r\n        return pageArray;\r\n    }\r\n\r\n    returnPaginatedDisplayArray(restaurantArray,page)\r\n    {\r\n        //If given n for a page value will return the array entries from 10*(n-1) to 10*n where n is an integer greater than or equal to 1;\r\n        let lowerBound = 10*(page-1);\r\n        let upperBound = 10*page;\r\n        let paginatedArray = [];\r\n        for(let i= lowerBound; i<upperBound; i++)\r\n        {\r\n            paginatedArray.push(restaurantArray[i]);\r\n        }\r\n        return paginatedArray;\r\n    }\r\n\r\n    processPaginationSelection(page)\r\n    {\r\n        this.setState({page: page});\r\n    }\r\n\r\n    activateModal (restaurant)\r\n    {\r\n        console.log(\"Modal activated\");\r\n        this.setState({modalActivated: true, modalRestaurant: restaurant});\r\n    }\r\n\r\n    render()\r\n    {\r\n        let displayRows = null;\r\n        if(this.props.restaurantData)\r\n        {\r\n            if(!this.props.filterActive)\r\n            {\r\n                let filteredArray = this.props.restaurantData;\r\n                if(this.props.filterBySearchQuery)\r\n                {\r\n                    filteredArray = FiltrationFunctions.filterRestaurantsBySearchQuery(filteredArray,this.props.filterBySearchQuery);\r\n                }\r\n\r\n                displayRows = filteredArray.map(element => \r\n                    <RestaurantInstance\r\n                        activateModal = {this.activateModal}\r\n                        restaurant = {element}\r\n                    />)\r\n\r\n                    if(filteredArray.length > 0)\r\n                    {\r\n                        return <div>\r\n                        <table className = \"stylizedTable\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>NAME</th>\r\n                                    <th>CITY</th>\r\n                                    <th>STATE</th>\r\n                                    <th>PHONE NUMBER</th>\r\n                                    <th>GENRES</th>\r\n                                </tr>\r\n                            </thead>\r\n                        <tbody>\r\n                            {this.returnPaginatedDisplayArray(displayRows,this.state.page)}\r\n                        </tbody>\r\n                        </table>\r\n                        <Pagination \r\n                            pages = {this.createPageArray(displayRows.length)}\r\n                            informParent = {this.processPaginationSelection}\r\n                        />\r\n                        <ModalDisplay\r\n                            modalActivated = {this.state.modalActivated}\r\n                            modalRestaurant = {this.state.modalRestaurant}\r\n                        /> </div>;\r\n                    }\r\n                    else\r\n                    {\r\n                        return <div>No data were found which matches the given search parameters.</div>;\r\n                    }\r\n            }\r\n            else\r\n            {\r\n                if(this.props.filterByState || this.props.filterByGenre)\r\n                {\r\n                    let filteredArray = [];\r\n                    if(this.props.filterByState && !this.props.filterByGenre)\r\n                    {\r\n                        filteredArray = FiltrationFunctions.filterRestaurantsByState(this.props.restaurantData,this.props.filterByState);\r\n                    }\r\n\r\n                    if(!this.props.filterByState && this.props.filterByGenre)\r\n                    {\r\n                        filteredArray = FiltrationFunctions.filterRestaurantsByGenre(this.props.restaurantData,this.props.filterByGenre);\r\n                    }\r\n\r\n                    if(this.props.filterByState && this.props.filterByGenre)\r\n                    {\r\n\r\n                        filteredArray = FiltrationFunctions.filterRestaurantsByGenre(FiltrationFunctions.filterRestaurantsByState(this.props.restaurantData,this.props.filterByState),this.props.filterByGenre);\r\n                    }\r\n\r\n                    if(this.props.filterBySearchQuery)\r\n                    {\r\n                        filteredArray = FiltrationFunctions.filterRestaurantsBySearchQuery(filteredArray,this.props.filterBySearchQuery);\r\n                    }\r\n\r\n                    displayRows = filteredArray.map(element => \r\n                        <RestaurantInstance\r\n                            activateModal = {this.activateModal}\r\n                            restaurant = {element}\r\n                        />)\r\n\r\n                    if(displayRows.length > 0)\r\n                    {\r\n                        return <div> <table className = \"stylizedTable\">\r\n                        <thead>\r\n                            <tr>\r\n                            <th>NAME</th>\r\n                            <th>CITY</th>\r\n                            <th>STATE</th>\r\n                            <th>PHONE NUMBER</th>\r\n                            <th>GENRES</th>\r\n                        </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {this.returnPaginatedDisplayArray(displayRows,this.state.page)}\r\n                        </tbody>\r\n                        </table>\r\n                        <Pagination \r\n                            pages = {this.createPageArray(displayRows.length)}\r\n                            informParent = {this.processPaginationSelection}\r\n                        />\r\n                        <ModalDisplay\r\n                            modalActivated = {this.state.modalActivated}\r\n                            modalRestaurant = {this.state.modalRestaurant}\r\n                        />  </div>;\r\n                    }\r\n                    else\r\n                    {\r\n                        return <div>No data were found which matches the given search parameters.</div>;\r\n                    }\r\n                }\r\n                else\r\n                {\r\n                    return <div>LOADING...</div>;    \r\n                }\r\n            }\r\n        }\r\n        else\r\n        {\r\n            return <div>LOADING...</div>;\r\n        }\r\n    }\r\n}","import React from 'react';\r\nimport {FaSearch} from 'react-icons/fa';\r\nimport './SearchBar.css';\r\n\r\nexport default class SearchBar extends React.Component\r\n{\r\n\r\n    constructor()\r\n    {\r\n        super();\r\n        this.state = { searchQuery: \"\"}\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.initiateSearch = this.initiateSearch.bind(this);\r\n    }\r\n\r\n    handleChange(event)\r\n    {\r\n        this.setState({searchQuery: event.target.value});\r\n        if(!event.target.value)\r\n        {\r\n            this.props.informParent(\"WIPE\");\r\n        }\r\n    }\r\n\r\n    render()\r\n    {\r\n        return <div>\r\n                    <form>\r\n                        <input type=\"text\" placeholder=\"Search..\" value = {this.state.searchQuery} onChange = {this.handleChange}></input>\r\n                        <button type=\"submit\" onClick = {this.initiateSearch}><FaSearch/></button>\r\n                    </form>\r\n               </div>\r\n    }\r\n\r\n    initiateSearch(event)\r\n    {\r\n        event.preventDefault();\r\n        this.props.informParent(this.state.searchQuery);\r\n    }\r\n}","import React from 'react';\r\n\r\nexport default class FilterByState extends React.Component\r\n{\r\n\r\n    constructor()\r\n    {\r\n        super();\r\n        this.state = {value: \"ALL\"};\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n\r\n    handleChange(event)\r\n    {\r\n        this.setState({value: event.target.value});\r\n        this.props.informParent(event.target.value);\r\n    }\r\n\r\n    render()\r\n    {\r\n        return <div> \r\n            <form>\r\n                <label>\r\n                Filter By State\r\n                <select value={this.state.value} onChange={this.handleChange}>\r\n                    <option value=\"ALL\">ALL</option>\r\n                    <option value=\"AZ\">AZ</option>\r\n                    <option value=\"CA\">CA</option>\r\n                    <option value=\"CO\">CO</option>\r\n                    <option value=\"FL\">FL</option>\r\n                    <option value=\"HI\">HI</option>\r\n                    <option value=\"MA\">MA</option>\r\n                    <option value=\"ME\">ME</option>\r\n                    <option value=\"MN\">MN</option>\r\n                    <option value=\"MD\">MD</option>\r\n                    <option value=\"NC\">NC</option>\r\n                    <option value=\"NJ\">NJ</option>\r\n                    <option value=\"NY\">NY</option>\r\n                    <option value=\"NV\">NV</option>\r\n                    <option value=\"OR\">OR</option>\r\n                    <option value=\"PA\">PA</option>\r\n                    <option value=\"SC\">SC</option>\r\n                    <option value=\"TN\">TN</option>\r\n                    <option value=\"TX\">TX</option>\r\n                    <option value=\"VA\">VA</option>\r\n                    <option value=\"WV\">WV</option>\r\n                </select>\r\n                </label>\r\n            </form>\r\n           \r\n        </div>\r\n    }\r\n}","import React from 'react';\r\n\r\nexport default class FilterByGenre extends React.Component\r\n{\r\n\r\n    constructor()\r\n    {\r\n        super();\r\n        this.state = {value: \"ALL\"};\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n\r\n    handleChange(event)\r\n    {\r\n        this.setState({value: event.target.value});\r\n        this.props.informParent(event.target.value);\r\n    }\r\n\r\n    render()\r\n    {\r\n        return <div> \r\n            <form>\r\n                <label>\r\n                Filter By Genre\r\n                <select value={this.state.value} onChange={this.handleChange}>\r\n                    <option value=\"ALL\">ALL</option>\r\n                    <option value=\"American\">American</option>\r\n                    <option value=\"Asian\">Asian</option>\r\n                    <option value=\"Bakery\">Bakery</option>\r\n                    <option value=\"Belgian\">Belgian</option>\r\n                    <option value=\"Bistro\">Bistro</option>\r\n                    <option value=\"British\">British</option>\r\n                    <option value=\"Cafe\">Cafe</option>\r\n                    <option value=\"Coffee\">Coffee</option>\r\n                    <option value=\"Continental\">Continental</option>\r\n                    <option value=\"Contemporary\">Contemporary</option>\r\n                    <option value=\"Eclectic\">Eclectic</option>\r\n                    <option value=\"European\">European</option>\r\n                    <option value=\"French\">French</option>\r\n                    <option value=\"Fusion\">Fusion</option>\r\n                    <option value=\"Grill\">Grill</option>\r\n                    <option value=\"Hawaiian\">Hawaiian</option>\r\n                    <option value=\"International\">International</option>\r\n                    <option value=\"Italian\">Italian</option>\r\n                    <option value=\"Irish\">Irish</option>\r\n                    <option value=\"Japanese\">Japanese</option>\r\n                    <option value=\"Kosher\">Kosher</option>\r\n                    <option value=\"Oysters\">Oysters</option>\r\n                    <option value=\"Pasta\">Pasta</option>\r\n                    <option value=\"Polynesian\">Polynesian</option>\r\n                    <option value=\"Pacific Rim\">Pacific Rim</option>\r\n                    <option value=\"Seafood\">Seafood</option>\r\n                    <option value=\"Sushi\">Sushi</option>\r\n                    <option value=\"Steak\">Steak</option>\r\n                    <option value=\"Tea\">Tea</option>\r\n                    <option value=\"Traditional\">Traditional</option>\r\n                    <option value=\"Vegetarian\">Vegetarian</option>\r\n                    <option value=\"Vietnamese\">Vietnamese</option>\r\n                </select>\r\n                </label>\r\n            </form>\r\n        </div>\r\n    }\r\n}","import React from 'react';\r\n\r\nexport default class FilterActiveToggle extends React.Component\r\n{\r\n\r\n    constructor()\r\n    {\r\n        super();\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.state = {toggleActive: true}\r\n    }\r\n\r\n    render()\r\n    {\r\n        return (<label className=\"switch\"> Toggle Filtration\r\n        <input type=\"checkbox\" onChange = {this.handleChange} checked = {this.state.toggleActive}></input>\r\n        <span className=\"slider\"></span>\r\n      </label>);\r\n    }\r\n\r\n    handleChange(event)\r\n    {\r\n        this.props.informParent(event.target.checked);\r\n        this.setState({toggleActive: event.target.checked});\r\n    }\r\n}","import React from 'react';\r\nimport SearchBar from './SearchBar.js';\r\nimport FilterByState from './FilterByState.js';\r\nimport FilterByGenre from './FilterByGenre.js';\r\nimport FilterActiveToggle from './FilterActiveToggle.js';\r\nimport './FiltrationDisplay.css';\r\n\r\nexport default class FiltrationDisplay extends React.Component\r\n{\r\n\r\n    constructor()\r\n    {\r\n        super();\r\n        this.state = {stateValue: null};\r\n        this.informParentState = this.informParentState.bind(this);\r\n        this.informParentGenre = this.informParentGenre.bind(this);\r\n        this.informParentSearchQuery = this.informParentSearchQuery.bind(this);\r\n        this.informParentToggle = this.informParentToggle.bind(this);\r\n    }\r\n\r\n\r\n    render()\r\n    {\r\n            return <div> \r\n            <SearchBar informParent = {this.informParentSearchQuery}/>\r\n            <FilterActiveToggle informParent = {this.informParentToggle}/> \r\n            <div className = \"groupFiltration\">\r\n                <div className = \"additionalPadding\">\r\n                    <FilterByState informParent = {this.informParentState}/>\r\n                </div>\r\n            <FilterByGenre informParent = {this.informParentGenre}/>\r\n            </div>\r\n            </div>\r\n        \r\n    }\r\n\r\n    informParentState(state)\r\n    {\r\n        this.props.filterByState(state);\r\n    }\r\n\r\n    informParentGenre(genre)\r\n    {\r\n        this.props.filterByGenre(genre);\r\n    }\r\n\r\n    informParentSearchQuery(searchQuery)\r\n    {\r\n        this.props.filterBySearchQuery(searchQuery);\r\n    }\r\n\r\n    informParentToggle(toggleState)\r\n    {\r\n        this.props.processToggleState(toggleState);\r\n    }\r\n}","import React from 'react';\r\nimport axios from 'axios';\r\nimport * as Constants from '../Constants/Constants.js';\r\nimport TableDisplay from './TableDisplay/TableDisplay.js';\r\nimport FiltrationDisplay from './FiltrationDisplay/FiltrationDisplay.js';\r\nimport * as SortingFunctions from '../SortingFunctions/SortingFunctions.js';\r\n\r\nexport default class DataDisplay extends React.Component\r\n{\r\n\r\n    constructor()\r\n    {\r\n        super();\r\n        this.state = \r\n        { \r\n            restaurantData: null, \r\n            filterActive: false, \r\n            filterByState: null, \r\n            filterByGenre: null,\r\n            filterBySearchQuery: null,\r\n            toggleActive: true\r\n        };\r\n        this.filterByState = this.filterByState.bind(this);\r\n        this.filterByGenre = this.filterByGenre.bind(this);\r\n        this.filterBySearchQuery = this.filterBySearchQuery.bind(this);\r\n        this.determineIfFilterIsActive = this.determineIfFilterIsActive.bind(this);\r\n        this.processToggleState = this.processToggleState.bind(this);\r\n    }\r\n\r\n    render()\r\n    {\r\n        return <div>\r\n            <FiltrationDisplay \r\n                filterByState = {this.filterByState}\r\n                filterByGenre = {this.filterByGenre}\r\n                filterBySearchQuery = {this.filterBySearchQuery}\r\n                processToggleState = {this.processToggleState}\r\n                searchQuery = {this.state.filterBySearchQuery}\r\n            /> \r\n            <TableDisplay \r\n                restaurantData = {this.state.restaurantData}\r\n                filterActive = {this.state.filterActive}\r\n                filterByState = {this.state.filterByState}\r\n                filterByGenre = {this.state.filterByGenre}\r\n                filterBySearchQuery = {this.state.filterBySearchQuery}\r\n\r\n            />\r\n            </div>;\r\n    }\r\n\r\n    componentDidMount()\r\n    {\r\n        this.getRestaurantData();\r\n    }\r\n\r\n    filterByState(state)\r\n    {\r\n        if(state !== \"ALL\")\r\n        {\r\n            this.setState({filterByState: state}, () => this.determineIfFilterIsActive() );\r\n        }\r\n        else\r\n        {\r\n            this.setState({filterByState: null}, () => this.determineIfFilterIsActive() );\r\n        }\r\n    }\r\n\r\n    filterByGenre(genre)\r\n    {\r\n        if(genre !== \"ALL\")\r\n        {\r\n            this.setState({filterByGenre: genre}, () => this.determineIfFilterIsActive() );\r\n        }\r\n        else\r\n        {\r\n            this.setState({filterByGenre: null}, () => this.determineIfFilterIsActive() );\r\n        }\r\n    }\r\n\r\n    processToggleState(filterState)\r\n    {\r\n        this.setState({toggleActive: filterState}, () => this.determineIfFilterIsActive());\r\n    }\r\n\r\n    filterBySearchQuery(searchQuery)\r\n    {\r\n        //We have a special case for wiping the search results. Note that this case is separate from the normal flow becuase neither the enter key nor the \r\n        // search button has been necessarily activated.\r\n        if(searchQuery === \"WIPE\")\r\n        {\r\n            this.setState({filterBySearchQuery: null});\r\n        }\r\n        else\r\n        {\r\n            if(searchQuery)\r\n            {\r\n                this.setState({filterBySearchQuery: searchQuery});\r\n            }\r\n            else\r\n            {\r\n                this.setState({filterBySearchQuery: null});\r\n            }\r\n        }\r\n    }\r\n\r\n    determineIfFilterIsActive()\r\n    {\r\n        //Determines if a filter is present. Note that we do not consider the search query to be a \"filter\" even though it is named as such for consistency throughout the program.\r\n        //We also have to consider the toggle which can potentially disable the filtration capability. However even if the filter is allowed by the toggle, no filter is active if both dropdowns have a null/ALL state. \r\n        if((!this.state.filterByState && !this.state.filterByGenre) || !this.state.toggleActive)\r\n        {\r\n            if(this.state.filterActive) //This conditional is required to prevent endless state modification. \r\n            {\r\n                this.setState({filterActive: false});\r\n            }\r\n        }\r\n        else\r\n        {\r\n            if(!this.state.filterActive && this.state.toggleActive) //Similar logic to the above comment.\r\n            {\r\n                this.setState({filterActive: true});\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    getRestaurantData()\r\n    {\r\n        let headerConfig = \r\n        {\r\n            headers: \r\n            {\r\n                Authorization: Constants.AUTHORIZATION_CODE,\r\n            }\r\n        }\r\n\r\n        axios.get(Constants.GET_RESTAURANT_DATA,headerConfig)\r\n        .then(response =>\r\n        {\r\n           if(response.status === 200)\r\n           {\r\n               this.setState({restaurantData: SortingFunctions.sortRestaurantsAlphabetically(response.data)});\r\n               console.log(\"restaurant data\", response.data);\r\n           }\r\n        })\r\n    }\r\n}","//Used to store vital constant program data.\r\nexport const GET_RESTAURANT_DATA = \"https://code-challenge.spectrumtoolbox.com/api/restaurants\";\r\nexport const AUTHORIZATION_CODE = \"Api-Key q3MNxtfep8Gt\";","//Exports a variety of sorting functions to order the restaurant table.\r\n//Includes sorting alphabetically.\r\n\r\nexport function sortRestaurantsAlphabetically(unorderedArray)\r\n{\r\n    return unorderedArray.sort((a,b) => \r\n    {\r\n        if(a.name > b.name)\r\n        {\r\n            return 1;\r\n        }\r\n        if(a.name < b.name)\r\n        {\r\n            return -1;\r\n        }\r\n        return 0;\r\n    });\r\n}","import './App.css';\nimport DataDisplay from './DataDisplay/DataDisplay.js';\n\nfunction App() \n{\n  return (\n    <div className=\"App\">\n      <DataDisplay></DataDisplay>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}